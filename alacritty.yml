env:
  # default: `xterm-256color`
  TERM: alacritty

window:
  draw_bold_text_with_bright_colors: true
  padding:
    x: 5
    y: 5

scrolling:
  history: 10000
  multiplier: 3

font:
  size: 9.0
  normal:
    family: Iosevka Term
    style: Medium

  bold:
    family: Iosevka Term
    style: Bold

  italic:
    family: Iosevka Term
    style: Italic

  offset:
    x: 0
    y: 0
  glyph_offset:
    x: 0
    y: 0

selection:
  semantic_escape_chars: ',â”‚`|:"'' ()[]{}<>'

  save_to_clipboard: false

cursor:
  style:
    shape: Underline
    blinking: Off
    unfocused_hollow: true

mouse_bindings:
  - { mouse: Right, action: PasteSelection }
key_bindings:
    # delete one word to the left
  - {key: Back, mods: Control, chars: "\x17"}
    # delete full line
  - {key: Back, mods: Control|Shift, chars: "\x15"}
  - { key: X, mods: Control|Shift, action: ToggleViMode }
  # Search
  - { key: N, mode: Vi, action: SearchNext }
  - { key: N, mode: Vi, mods: Shift, action: SearchPrevious }
  - { key: Return, mode: Search, action: SearchConfirm }
  - { key: Escape, mode: Search, action: SearchCancel    }
  # Yank and Paste
  - { key: Y, action: Copy, mode: Vi }
  - { key: P, action: Paste, mode: Vi }
  - { key: V, mods: Control|Shift, mode: ~Vi, action: Paste }
  - { key: C, mods: Control|Shift, mode: ~Vi, action: Copy }

  # remaps for Control + Shift
  - { key: H, mods: Control|Shift, chars: "\x1b[72;5u" }
  - { key: J, mods: Control|Shift, chars: "\x1b[74;5u" }
  - { key: K, mods: Control|Shift, chars: "\x1b[75;5u" }
  - { key: L, mods: Control|Shift, chars: "\x1b[76;5u" }
  - { key: I, mods: Control, chars: "\x1b[105;5u" }
  - { key: Period, mods: Control, chars: "\x1b[46;5u" }
  - { key: Comma, mods: Control, chars: "\x1b[44;5u" }
  - { key: Semicolon, mods: Control, chars: "\x1b[59;5u" }
  - { key: Return, mods: Shift, chars: "\x1b[13;2u" }

  - { key: L,         mods: Control,                    action: ClearLogNotice }
  - { key: L,         mods: Control, mode: ~Vi|~Search, chars: "\x0c"          }
  - { key: PageUp,    mods: Shift,   mode: ~Alt,        action: ScrollPageUp   }
  - { key: PageDown,  mods: Shift,   mode: ~Alt,        action: ScrollPageDown }
  - { key: Home,      mods: Shift,   mode: ~Alt,        action: ScrollToTop    }
  - { key: End,       mods: Shift,   mode: ~Alt,        action: ScrollToBottom }
  
  # (Windows, Linux, and BSD only)
  - { key: P,              mods: Control|Shift, mode: ~Vi,        action: Paste            }
  - { key: C,              mods: Control|Shift,                   action: Copy             }
  - { key: F,              mods: Control|Shift, mode: ~Search,    action: SearchForward    }
  - { key: B,              mods: Control|Shift, mode: ~Search,    action: SearchBackward   }
  - { key: C,              mods: Control|Shift, mode: Vi|~Search, action: ClearSelection   }
  - { key: Plus,           mods: Control,                         action: IncreaseFontSize }
  - { key: Minus,          mods: Control,                         action: DecreaseFontSize }
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - ToggleViMode
#   - SearchForward
#       Start searching toward the right of the search origin.
#   - SearchBackward
#       Start searching toward the left of the search origin.
#   - Copy
#   - Paste
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollHalfPageUp
#   - ScrollHalfPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#       Remove the terminal's scrollback history.
#   - Hide
#       Hide the Alacritty window.
#   - Minimize
#       Minimize the Alacritty window.
#   - Quit
#       Quit Alacritty.
#   - ToggleFullscreen
#   - SpawnNewInstance
#       Spawn a new instance of Alacritty.
#   - CreateNewWindow
#       Create a new Alacritty window from the current process.
#   - ClearLogNotice
#       Clear Alacritty's UI warning and error notice.
#   - ClearSelection
#       Remove the active selection.
#   - ReceiveChar
#   - None
#
#
# - Search mode exclusive actions:
#   - SearchFocusNext
#       Move the focus to the next search match.
#   - SearchFocusPrevious
#       Move the focus to the previous search match.
#   - SearchConfirm
#   - SearchCancel
#   - SearchClear
#       Reset the search regex.
#   - SearchDeleteWord
#       Delete the last word in the search regex.
#   - SearchHistoryPrevious
#       Go to the previous regex in the search history.
#   - SearchHistoryNext
#       Go to the next regex in the search history.
#
# - macOS exclusive actions:
#   - ToggleSimpleFullscreen
#       Enter fullscreen without occupying another space.
#
# - Linux/BSD exclusive actions:
#
#   - CopySelection
#       Copy from the selection buffer.
#   - PasteSelection
#       Paste from the selection buffer.
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Search
#    - Alt
#    - Vi
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
#
# If the same trigger is assigned to multiple actions, all of them are executed
# in the order they were defined in.
#debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - Off
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Print all received window events.
  #print_events: false

  # Highlight window damage information.
  #highlight_damage: false

colors:
  primary:
    background: '0x1f1f28'
    foreground: '0xdcd7ba'

  normal:
    black:   '0x090618'
    red:     '0xc34043'
    green:   '0x76946a'
    yellow:  '0xc0a36e'
    blue:    '0x7e9cd8'
    magenta: '0x957fb8'
    cyan:    '0x6a9589'
    white:   '0xc8c093'

  bright:
    black:   '0x727169'
    red:     '0xe82424'
    green:   '0x98bb6c'
    yellow:  '0xe6c384'
    blue:    '0x7fb4ca'
    magenta: '0x938aa9'
    cyan:    '0x7aa89f'
    white:   '0xdcd7ba'

  selection:
    background: '0x2d4f67'
    foreground: '0xc8c093'

  indexed_colors:
    - { index: 16, color: '0xffa066' }
    - { index: 17, color: '0xff5d62' }

